syntax = "proto3";

option csharp_namespace = "GrpcAPI.index";

import "shared.proto";

package index;

service Index {
    rpc Has (HasRequest) returns (HasResponse);
    rpc Get (GetRequest) returns (GetResponse);
    rpc GetChunk (GetChunkRequest) returns ( GetChunkResponse);
    rpc GetUntil (GetUntilRequest) returns ( GetUntilResponse);
    rpc Put (PutRequest) returns (SuccessResponse);
    rpc Delete (DeleteRequest) returns (SuccessResponse);
    rpc Clear (ClearRequest) returns (SuccessResponse);
    rpc Size (SizeRequest) returns (SizeResponse);
    rpc GetRecordSize (GetRecordSizeRequest) returns (GetRecordSizeResponse);
    rpc GetRecordCount (GetRecordCountRequest) returns (GetRecordCountResponse);
    rpc ListKeys (ListKeysRequest) returns ( ListKeysResponse);
}

message HasRequest {
    string database = 1;
    string indexName = 2;
    string key = 3;
}

message HasResponse {
    bool has = 1;
    optional string error = 2;
}

message GetRequest {
    string database = 1;
    string indexName = 2;
    string key = 3;
}

message GetResponse {
    bytes value = 1;
    bool notFound = 2;
    optional string error = 3;
}

message GetChunkRequest {
    string database = 1;
    string indexName = 2;
    string key = 3;
    int64 offset = 4;
    uint32 chunkSize = 5;
}

message GetChunkResponse {
    bytes chunk = 1;
    optional string error = 2;
}

message GetUntilRequest {
    string database = 1;
    string indexName = 2;
    string key = 3;
    int64 offset = 4;
    int32 terminator = 5;    
}

message GetUntilResponse {
    bytes chunk = 1;
    optional string error = 2;
}

message PutRequest {
    string database = 1;
    string indexName = 2;
    string key = 3;
    bytes value = 4;
}

message DeleteRequest {
    string database = 1;
    string indexName = 2;
    string key = 3;
}

message ClearRequest {
    string database = 1;
    string indexName = 2;    
}

message SizeRequest {
    string database = 1;
    string indexName = 2;
}

message SizeResponse {
    int32 size = 1;
    optional string error = 2;
}

message GetRecordSizeRequest {
    string database = 1;
    string indexName = 2;
    string key = 3;
}

message GetRecordSizeResponse {
    int64 size = 1;
    optional string error = 2;
}

message ListKeysRequest {
    string database = 1;
    string indexName = 2;
}

message ListKeysResponse {
    repeated string keys = 1;
    optional string error = 2;
}

message GetRecordCountRequest {
    string database = 1;
    string indexName = 2;
}

message GetRecordCountResponse {
    int32 count = 1;
    optional string error = 2;
}
// This file was automatically generated by generate_client.ts. Want to regenerate it? Run `npm run create:client`


export class DbServerClient {
    public static async listDatabases(body: {
            serverIP: string;
            serverPort: number;
        }): Promise<{
            databases?: string[];
            success: boolean;
            error?: string;
        }> {
        const request = await fetch('/api/dbserver/listDatabases', {
            method: 'POST',
            body: JSON.stringify(body),
            headers: {
                'Content-Type': 'application/json'
            }
        });

        if (!request.ok) {
            throw new Error('Request failed');
        }
        return request.json();
    }
    public static async createDatabase(body: {
            serverIP: string;
            serverPort: number;
            dbName: string;
        }): Promise<{
            success: boolean;
            error?: string;
        }> {
        const request = await fetch('/api/dbserver/createDatabase', {
            method: 'POST',
            body: JSON.stringify(body),
            headers: {
                'Content-Type': 'application/json'
            }
        });

        if (!request.ok) {
            throw new Error('Request failed');
        }
        return request.json();
    }
    public static async hasDatabase(body: {
            serverIP: string;
            serverPort: number;
            dbName: string;
        }): Promise<{
            success: boolean;
            error?: string;
        }> {
        const request = await fetch('/api/dbserver/hasDatabase', {
            method: 'POST',
            body: JSON.stringify(body),
            headers: {
                'Content-Type': 'application/json'
            }
        });

        if (!request.ok) {
            throw new Error('Request failed');
        }
        return request.json();
    }
    public static async deleteDatabase(body: {
            serverIP: string;
            serverPort: number;
            dbName: string;
        }): Promise<{
            success: boolean;
            error?: string;
        }> {
        const request = await fetch('/api/dbserver/deleteDatabase', {
            method: 'POST',
            body: JSON.stringify(body),
            headers: {
                'Content-Type': 'application/json'
            }
        });

        if (!request.ok) {
            throw new Error('Request failed');
        }
        return request.json();
    }
}
